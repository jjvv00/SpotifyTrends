# Data
## Technical Description
We will be accessing the Spotify Web API that provides us to a vast collection of music-related data. This could include information about tracks, albums, artists, and user-specific information. This data is collected and maintained by Spotify, a leading music streaming platform. Thus, we are assuming that Spotify is able to update the API frequently. There are not any obvious issues or problems with the data. We plan to retrieve data through the “spotifyr” R wrapper for pulling track audio features and other information from Spotify’s Web API in bulk [(Thompson, Et al., 2022)](https://www.rcharlie.com/spotifyr/). The authors are Josia Parry, Donal Phipps, Tom Wolf, and Charlie Thompson, who also maintains the package. According to Thomposon’s Github, the last changes are from December 14, 2022.

Our data is in the form of 4 dataframes, one for each of our top two artists. These data frames contain all of the songs for a specific artist (Taylor Swift, Fleetwood Mac, Doja Cat, and Peso Pluma). There are 39 features listed for each song. These range from basic descriptors such as song title, album, release date, to more complex features to describe the mood/tone of the songs. We will mainly utilize the danceability, energy, and valence scores for each song. The number of rows in each of these data frames is the total number of songs each artist has. Taylor Swift will have a data frame of 530 X 39. Fleetwood Mac has a data frame of size 760 X 39. Doja Cat has a data frame of size 91 X 39, and Peso Pluma has a data frame of size 57 X 39.  


## Research Plan

Comparative Analysis of Top Artists:

We will analyze the top two artists for each of us provided by our Spotify Wrapped. 

Exploring Album Moods:

Leveraging the Spotify API's audio features, particularly valence and energy, we can analyze the mood dynamics of artists' albums. Valence represents the musical positivity, while energy represents the intensity and activity. By aggregating these features at the album level, we gain insights into the overall emotional content of each album. The Spotify R package allows us to extract and process this information efficiently, enabling us to explore patterns and themes in the emotional landscape of diverse artists. By utilizing the `get_audio_features` function from the “spotifyr,” we can obtain the valence, danceability, and energy features for each track. Then. we can aggregate these features at the album level to represent the overall mood. Lastly, we can analyze patterns and trends in mood dynamics across different artists' albums.



## Missing Value Analysis
The only missing values are in the "track_preview_url" column in the Taylor Swift dataframe. 

```{r}
library(spotifyr)
library(dplyr)
library(knitr)
library(ggplot2)
library(tidyverse)

Sys.setenv(SPOTIFY_CLIENT_ID = "d895b3472cb743c581bc155bd97d3c4e", SPOTIFY_CLIENT_SECRET = "348918affcf741d8841b9445b693c0d4")

token <- get_spotify_access_token()
```

```{r}
# For Taylor Swift 
TS <- get_artist_audio_features('taylor swift')

NA_countsTS <- colSums(is.na(TS))

na_dataTS <- data.frame(column = names(NA_countsTS), NA_countTS = NA_countsTS)

ggplot(na_dataTS, aes(x = column, y = NA_countTS, fill = NA_countTS)) +
  geom_bar(stat = "identity", color = "black") +
  labs(title = "Count of NAs in Each Column for Taylor Swift", x = "Column", y = "Number of NA Values") +
  theme_minimal() + 
  theme(axis.text.x = element_text(size = 8, angle = 50, hjust = 1)) +
  geom_text(aes(label = NA_countTS), vjust = -0.5, size = 3)
```
As you can see, the NA values are in the "track_preview_url" column. However, we will not be using this feature anyway, so we will remove it from all of the dataframes. 

```{r}
# For Fleetwood Mac
FM <- get_artist_audio_features('fleetwood mac')

NA_countsFM <- colSums(is.na(FM))

na_dataFM <- data.frame(column = names(NA_countsFM), NA_countFM = NA_countsFM)

ggplot(na_dataFM, aes(x = column, y = NA_countFM, fill = NA_countFM)) +
  geom_bar(stat = "identity", color = "black") +
  scale_y_continuous(limits = c(0, max(NA_countsFM) + 1)) + 
  labs(title = "Count of NAs in Each Column for Fleetwood Mac", x = "Column", y = "Number of NA Values") +
  theme_minimal() + 
  theme(axis.text.x = element_text(size = 8, angle = 50, hjust = 1)) + 
  geom_text(aes(label = NA_countFM), vjust = -0.5, size = 3)
```
There are no NA values in this data frame.

```{r}
# For Doja Cat
DC <- get_artist_audio_features('doja cat')

NA_countsDC <- colSums(is.na(DC))

na_dataDC <- data.frame(column = names(NA_countsDC), NA_countDC = NA_countsDC)

ggplot(na_dataDC, aes(x = column, y = NA_countDC, fill = NA_countDC)) +
  geom_bar(stat = "identity", color = "black") +
  scale_y_continuous(limits = c(0, max(NA_countsDC) + 1)) +
  labs(title = "Count of NAs in Each Column for Doja Cat", x = "Column", y = "Number of NA Values") +
  theme_minimal() + 
  theme(axis.text.x = element_text(size = 8, angle = 50, hjust = 1)) + 
  geom_text(aes(label = NA_countDC), vjust = -0.5, size = 3)
```
There are no NA values in this data frame.

```{r}
# For Peso Pluma
PP <- get_artist_audio_features('peso pluma')

NA_countsPP <- colSums(is.na(PP))

na_dataPP <- data.frame(column = names(NA_countsPP), NA_countPP = NA_countsPP)

ggplot(na_dataPP, aes(x = column, y = NA_countPP, fill = NA_countPP)) +
  geom_bar(stat = "identity", color = "black") +
  scale_y_continuous(limits = c(0, max(NA_countsPP) + 1)) +
  labs(title = "Count of NAs in Each Column for Peso Pluma", x = "Column", y = "Number of NA Values") +
  theme_minimal() + 
  theme(axis.text.x = element_text(size = 8, angle = 50, hjust = 1)) + 
  geom_text(aes(label = NA_countPP), vjust = -0.5, size = 3)
```
There are no NA values in this data frame.

